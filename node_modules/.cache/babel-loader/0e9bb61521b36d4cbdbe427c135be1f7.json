{"ast":null,"code":"import _slicedToArray from \"/Users/simonfauvre/Documents/GitHub/P7/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/simonfauvre/Documents/GitHub/P7/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from 'react-google-maps';\nimport * as restaurantData from \"./data/restaurant.json\";\nimport mapStyle from \"./mapStyle.js\";\n\nfunction Map() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedRestaurant = _useState2[0],\n        setSelectedRestaurant = _useState2[1];\n\n  return React.createElement(GoogleMap, {\n    defaultZoom: 13,\n    defaultCenter: {\n      lat: 45.764042,\n      lng: 4.835659\n    },\n    defaultOptions: {\n      styles: mapStyle,\n      disableDefaultUI: true,\n      zoomControl: true,\n      zoomControlOptions: {\n        style: window.google.maps.ZoomControlStyle.SMALL\n      },\n      mapTypeControl: true,\n      mapTypeControlOptions: {\n        style: window.google.maps.MapTypeControlStyle.DROPDOWN_MENU,\n        position: window.google.maps.ControlPosition.BOTTOM_LEFT //mapTypeIds: ['roadmap', 'satellite', 'hybrid', 'terrain']\n\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, restaurantData.features.map(restaurant => React.createElement(Marker, {\n    key: restaurant.restaurantID,\n    position: {\n      lat: restaurant.lat,\n      lng: restaurant.long\n    },\n    onClick: () => {\n      setSelectedRestaurant(restaurant);\n    },\n    icon: {\n      url: \"/logo_resto.png\",\n      scaledSize: new window.google.maps.Size(30, 30)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), selectedRestaurant && React.createElement(InfoWindow, {\n    position: {\n      lat: selectedRestaurant.lat,\n      lng: selectedRestaurant.long\n    },\n    onCloseClick: () => {\n      setSelectedRestaurant(null);\n    },\n    options: {\n      pixelOffset: new window.google.maps.Size(0, -30)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    style: {\n      fontSize: 14\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, selectedRestaurant.restaurantName))));\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\nexport default function App() {\n  return React.createElement(\"div\", {\n    style: {\n      width: '74vw',\n      height: '100vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(WrappedMap, {\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyBbXlKpycaKnkWqib5h17gluphKw_nLENs`,\n    loadingElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }),\n    containerElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }),\n    mapElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/simonfauvre/Documents/GitHub/P7/src/App.js"],"names":["React","useState","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","restaurantData","mapStyle","Map","selectedRestaurant","setSelectedRestaurant","lat","lng","styles","disableDefaultUI","zoomControl","zoomControlOptions","style","window","google","maps","ZoomControlStyle","SMALL","mapTypeControl","mapTypeControlOptions","MapTypeControlStyle","DROPDOWN_MENU","position","ControlPosition","BOTTOM_LEFT","features","map","restaurant","restaurantID","long","url","scaledSize","Size","pixelOffset","fontSize","restaurantName","WrappedMap","App","width","height"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow} from 'react-google-maps';\nimport * as restaurantData from \"./data/restaurant.json\";\nimport mapStyle from \"./mapStyle.js\";\n\nfunction Map(){\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n\n  return (\n    <GoogleMap \n      defaultZoom={13} \n      defaultCenter={{ lat: 45.764042, lng: 4.835659 }}\n      defaultOptions={{\n        styles: mapStyle, \n        disableDefaultUI: true, \n        zoomControl: true, \n        zoomControlOptions: {\n          style: window.google.maps.ZoomControlStyle.SMALL\n        },\n        mapTypeControl: true,\n        mapTypeControlOptions: {\n          style: window.google.maps.MapTypeControlStyle.DROPDOWN_MENU,\n          position: window.google.maps.ControlPosition.BOTTOM_LEFT\n          //mapTypeIds: ['roadmap', 'satellite', 'hybrid', 'terrain']\n        }\n      }}\n    >\n      {restaurantData.features.map(restaurant => (\n        <Marker \n          key={restaurant.restaurantID} \n          position={{lat: restaurant.lat, lng: restaurant.long}}\n          onClick={() => {\n            setSelectedRestaurant(restaurant);\n          }}\n          icon={{\n            url: \"/logo_resto.png\",\n            scaledSize: new window.google.maps.Size(30, 30)\n          }}\n        />\n      ))}\n\n      {selectedRestaurant && (\n        <InfoWindow \n          position={{lat: selectedRestaurant.lat, lng: selectedRestaurant.long}}\n          onCloseClick={() => {\n            setSelectedRestaurant(null);\n          }}\n          options={{pixelOffset: new window.google.maps.Size(0, -30)}}\n        >\n            <div>\n              <h2 style={{fontSize: 14}}>{selectedRestaurant.restaurantName}</h2>\n            </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nexport default function App() {\n  return (\n    <div style={{width: '74vw', height: '100vh'}}>\n      <WrappedMap googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyBbXlKpycaKnkWqib5h17gluphKw_nLENs`}\n        loadingElement={<div style={{ height: \"100%\" }} />}\n        containerElement={<div style={{ height: \"100%\" }} />}\n        mapElement={<div style={{ height: \"100%\" }} />}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}