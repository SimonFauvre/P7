{"ast":null,"code":"import _slicedToArray from \"/Users/simonfauvre/Documents/GitHub/P7/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/simonfauvre/Documents/GitHub/P7/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from 'react-google-maps';\nimport * as restaurantData from \"./data/restaurant.json\";\nimport mapStyle from \"./mapStyle.js\";\nimport List from \"./List.js\";\nimport Titre from \"./Titre.js\";\nimport useGeolocation from \"react-hook-geolocation\"; //function Map(){\n\nconst Map = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedRestaurant = _useState2[0],\n        setSelectedRestaurant = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedLocation = _useState4[0],\n        setSelectedLocation = _useState4[1];\n\n  const location = useGeolocation();\n  const center = {\n    lat: location.latitude,\n    lng: location.longitude\n  };\n  return React.createElement(GoogleMap, {\n    defaultZoom: 13,\n    defaultCenter: {\n      lat: 45.764042,\n      lng: 4.835659\n    },\n    center: center,\n    defaultOptions: {\n      styles: mapStyle,\n      disableDefaultUI: true,\n      zoomControl: true,\n      zoomControlOptions: {\n        style: window.google.maps.ZoomControlStyle.SMALL\n      },\n      mapTypeControl: true,\n      mapTypeControlOptions: {\n        style: window.google.maps.MapTypeControlStyle.DROPDOWN_MENU,\n        position: window.google.maps.ControlPosition.TOP_RIGHT\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Marker, {\n    position: {\n      lat: parseFloat(location.latitude),\n      lng: parseFloat(location.longitude)\n    },\n    onClick: () => {\n      setSelectedLocation(location);\n    },\n    icon: {\n      url: \"/here.png\",\n      scaledSize: new window.google.maps.Size(20, 20)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), selectedLocation && React.createElement(InfoWindow, {\n    position: {\n      lat: parseFloat(selectedLocation.latitude),\n      lng: parseFloat(selectedLocation.longitude)\n    },\n    options: {\n      pixelOffset: new window.google.maps.Size(0, -20)\n    },\n    onCloseClick: () => {\n      setSelectedLocation(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    style: {\n      fontSize: 14\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Vous \\xEAtes ici\"))), restaurantData.features.map(restaurant => React.createElement(Marker, {\n    key: restaurant.restaurantID,\n    position: {\n      lat: restaurant.lat,\n      lng: restaurant.long\n    },\n    onClick: () => {\n      setSelectedRestaurant(restaurant);\n    },\n    icon: {\n      url: \"/logo_resto.png\",\n      scaledSize: new window.google.maps.Size(30, 30)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), selectedRestaurant && React.createElement(InfoWindow, {\n    position: {\n      lat: selectedRestaurant.lat,\n      lng: selectedRestaurant.long\n    },\n    onCloseClick: () => {\n      setSelectedRestaurant(null);\n    },\n    onClick: () => {\n      changeCenter(selectedRestaurant);\n    },\n    options: {\n      pixelOffset: new window.google.maps.Size(0, -30)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    style: {\n      fontSize: 14\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, selectedRestaurant.restaurantName))));\n};\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\nexport default function App() {\n  return React.createElement(\"div\", {\n    className: \"appCSS\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: '65vw',\n      height: '100vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(WrappedMap, {\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyBbXlKpycaKnkWqib5h17gluphKw_nLENs`,\n    loadingElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }),\n    containerElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }),\n    mapElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      width: '35vw',\n      height: '100vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"general\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Titre, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/simonfauvre/Documents/GitHub/P7/src/App.js"],"names":["React","useState","useEffect","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","restaurantData","mapStyle","List","Titre","useGeolocation","Map","props","selectedRestaurant","setSelectedRestaurant","selectedLocation","setSelectedLocation","location","center","lat","latitude","lng","longitude","styles","disableDefaultUI","zoomControl","zoomControlOptions","style","window","google","maps","ZoomControlStyle","SMALL","mapTypeControl","mapTypeControlOptions","MapTypeControlStyle","DROPDOWN_MENU","position","ControlPosition","TOP_RIGHT","parseFloat","url","scaledSize","Size","pixelOffset","fontSize","features","map","restaurant","restaurantID","long","changeCenter","restaurantName","WrappedMap","App","width","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,SAAQC,SAAR,EAAmBC,YAAnB,EAAiCC,aAAjC,EAAgDC,MAAhD,EAAwDC,UAAxD,QAAyE,mBAAzE;AACA,OAAO,KAAKC,cAAZ,MAAgC,wBAAhC;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,cAAP,MAA2B,wBAA3B,C,CAEA;;AACA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAAA,oBACiCb,QAAQ,CAAC,IAAD,CADzC;AAAA;AAAA,QACZc,kBADY;AAAA,QACQC,qBADR;;AAAA,qBAE6Bf,QAAQ,CAAC,IAAD,CAFrC;AAAA;AAAA,QAEZgB,gBAFY;AAAA,QAEMC,mBAFN;;AAGnB,QAAMC,QAAQ,GAAGP,cAAc,EAA/B;AAEA,QAAMQ,MAAM,GAAG;AAACC,IAAAA,GAAG,EAAEF,QAAQ,CAACG,QAAf;AAAyBC,IAAAA,GAAG,EAAEJ,QAAQ,CAACK;AAAvC,GAAf;AAEA,SACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAE,EADf;AAEE,IAAA,aAAa,EAAE;AAAEH,MAAAA,GAAG,EAAE,SAAP;AAAkBE,MAAAA,GAAG,EAAE;AAAvB,KAFjB;AAGE,IAAA,MAAM,EAAEH,MAHV;AAIE,IAAA,cAAc,EAAE;AACdK,MAAAA,MAAM,EAAEhB,QADM;AAEdiB,MAAAA,gBAAgB,EAAE,IAFJ;AAGdC,MAAAA,WAAW,EAAE,IAHC;AAIdC,MAAAA,kBAAkB,EAAE;AAClBC,QAAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,gBAAnB,CAAoCC;AADzB,OAJN;AAOdC,MAAAA,cAAc,EAAE,IAPF;AAQdC,MAAAA,qBAAqB,EAAE;AACrBP,QAAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBK,mBAAnB,CAAuCC,aADzB;AAErBC,QAAAA,QAAQ,EAAET,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBQ,eAAnB,CAAmCC;AAFxB;AART,KAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiBE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAE;AAACpB,MAAAA,GAAG,EAAEqB,UAAU,CAACvB,QAAQ,CAACG,QAAV,CAAhB;AAAqCC,MAAAA,GAAG,EAAEmB,UAAU,CAACvB,QAAQ,CAACK,SAAV;AAApD,KADZ;AAEE,IAAA,OAAO,EAAE,MAAM;AACbN,MAAAA,mBAAmB,CAACC,QAAD,CAAnB;AACD,KAJH;AAKE,IAAA,IAAI,EAAE;AACJwB,MAAAA,GAAG,EAAE,WADD;AAEJC,MAAAA,UAAU,EAAE,IAAId,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBa,IAAvB,CAA4B,EAA5B,EAAgC,EAAhC;AAFR,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EA2BG5B,gBAAgB,IACjB,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAE;AAACI,MAAAA,GAAG,EAAEqB,UAAU,CAACzB,gBAAgB,CAACK,QAAlB,CAAhB;AAA6CC,MAAAA,GAAG,EAAEmB,UAAU,CAACzB,gBAAgB,CAACO,SAAlB;AAA5D,KADZ;AAEE,IAAA,OAAO,EAAE;AAACsB,MAAAA,WAAW,EAAE,IAAIhB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBa,IAAvB,CAA4B,CAA5B,EAA+B,CAAC,EAAhC;AAAd,KAFX;AAGE,IAAA,YAAY,EAAE,MAAM;AAClB3B,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAE;AAAC6B,MAAAA,QAAQ,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CANF,CA5BF,EAwCGvC,cAAc,CAACwC,QAAf,CAAwBC,GAAxB,CAA4BC,UAAU,IACrC,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEA,UAAU,CAACC,YADlB;AAEE,IAAA,QAAQ,EAAE;AAAC9B,MAAAA,GAAG,EAAE6B,UAAU,CAAC7B,GAAjB;AAAsBE,MAAAA,GAAG,EAAE2B,UAAU,CAACE;AAAtC,KAFZ;AAGE,IAAA,OAAO,EAAE,MAAM;AACbpC,MAAAA,qBAAqB,CAACkC,UAAD,CAArB;AACD,KALH;AAME,IAAA,IAAI,EAAE;AACJP,MAAAA,GAAG,EAAE,iBADD;AAEJC,MAAAA,UAAU,EAAE,IAAId,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBa,IAAvB,CAA4B,EAA5B,EAAgC,EAAhC;AAFR,KANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAxCH,EAqDG9B,kBAAkB,IACjB,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAE;AAACM,MAAAA,GAAG,EAAEN,kBAAkB,CAACM,GAAzB;AAA8BE,MAAAA,GAAG,EAAER,kBAAkB,CAACqC;AAAtD,KADZ;AAEE,IAAA,YAAY,EAAE,MAAM;AAClBpC,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,KAJH;AAKE,IAAA,OAAO,EAAE,MAAM;AACbqC,MAAAA,YAAY,CAACtC,kBAAD,CAAZ;AACD,KAPH;AAQE,IAAA,OAAO,EAAE;AAAC+B,MAAAA,WAAW,EAAE,IAAIhB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBa,IAAvB,CAA4B,CAA5B,EAA+B,CAAC,EAAhC;AAAd,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAE;AAACE,MAAAA,QAAQ,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BhC,kBAAkB,CAACuC,cAA/C,CADF,CATF,CAtDJ,CADF;AAwED,CA/ED;;AAiFA,MAAMC,UAAU,GAAGnD,YAAY,CAACC,aAAa,CAACQ,GAAD,CAAd,CAA/B;AAEA,eAAe,SAAS2C,GAAT,GAAe;AAC5B,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,MAAR;AAAgBC,MAAAA,MAAM,EAAE;AAAxB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,YAAY,EAAG,+HAA3B;AACE,IAAA,cAAc,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADlB;AAEE,IAAA,gBAAgB,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFpB;AAGE,IAAA,UAAU,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQE;AAAK,IAAA,KAAK,EAAE;AAACD,MAAAA,KAAK,EAAE,MAAR;AAAgBC,MAAAA,MAAM,EAAE;AAAxB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CARF,CADF;AAiBD","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow} from 'react-google-maps';\nimport * as restaurantData from \"./data/restaurant.json\";\nimport mapStyle from \"./mapStyle.js\";\nimport List from \"./List.js\";\nimport Titre from \"./Titre.js\";\nimport useGeolocation from \"react-hook-geolocation\";\n\n//function Map(){\nconst Map = props => {\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const location = useGeolocation();\n\n  const center = {lat: location.latitude, lng: location.longitude};\n\n  return (\n    <GoogleMap \n      defaultZoom={13} \n      defaultCenter={{ lat: 45.764042, lng: 4.835659 }}\n      center={center}\n      defaultOptions={{\n        styles: mapStyle, \n        disableDefaultUI: true, \n        zoomControl: true, \n        zoomControlOptions: {\n          style: window.google.maps.ZoomControlStyle.SMALL,\n        },\n        mapTypeControl: true,\n        mapTypeControlOptions: {\n          style: window.google.maps.MapTypeControlStyle.DROPDOWN_MENU,\n          position: window.google.maps.ControlPosition.TOP_RIGHT\n        }\n      }}>\n      <Marker\n        position={{lat: parseFloat(location.latitude), lng: parseFloat(location.longitude)}}\n        onClick={() => {\n          setSelectedLocation(location);\n        }}\n        icon={{\n          url: \"/here.png\",\n          scaledSize: new window.google.maps.Size(20, 20)\n        }}/>\n\n      {selectedLocation && (\n      <InfoWindow \n        position={{lat: parseFloat(selectedLocation.latitude), lng: parseFloat(selectedLocation.longitude)}}\n        options={{pixelOffset: new window.google.maps.Size(0, -20)}}\n        onCloseClick={() => {\n          setSelectedLocation(null);\n        }}>\n        <div>\n          <h2 style={{fontSize: 14}}>Vous êtes ici</h2>\n        </div>\n      </InfoWindow>\n      )}\n\n      {restaurantData.features.map(restaurant => (\n        <Marker \n          key={restaurant.restaurantID} \n          position={{lat: restaurant.lat, lng: restaurant.long}}\n          onClick={() => {\n            setSelectedRestaurant(restaurant);\n          }}\n          icon={{\n            url: \"/logo_resto.png\",\n            scaledSize: new window.google.maps.Size(30, 30)\n          }}/>\n      ))}\n\n      {selectedRestaurant && (\n        <InfoWindow \n          position={{lat: selectedRestaurant.lat, lng: selectedRestaurant.long}}\n          onCloseClick={() => {\n            setSelectedRestaurant(null);\n          }}\n          onClick={() => {\n            changeCenter(selectedRestaurant);\n          }}\n          options={{pixelOffset: new window.google.maps.Size(0, -30)}}>\n          <div>\n            <h2 style={{fontSize: 14}}>{selectedRestaurant.restaurantName}</h2>\n          </div>\n        </InfoWindow>\n      )}\n\n    </GoogleMap>\n  );\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nexport default function App() {\n  return (\n    <div className=\"appCSS\">\n      <div style={{width: '65vw', height: '100vh'}}>\n        <WrappedMap googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyBbXlKpycaKnkWqib5h17gluphKw_nLENs`}\n          loadingElement={<div style={{ height: \"100%\" }} />}\n          containerElement={<div style={{ height: \"100%\" }} />}\n          mapElement={<div style={{ height: \"100%\" }} />}\n        />\n      </div>\n      <div style={{width: '35vw', height: '100vh'}}>\n        <div className=\"general\">\n          <Titre/>\n          <List/>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}