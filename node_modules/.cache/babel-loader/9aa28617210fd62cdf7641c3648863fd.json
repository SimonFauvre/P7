{"ast":null,"code":"import _slicedToArray from \"/Users/simonfauvre/Documents/GitHub/P7/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/simonfauvre/Documents/GitHub/P7/src/List.js\";\nimport React, { useState } from \"react\";\nimport \"./List.css\";\nimport * as restaurantData from \"./data/restaurant.json\";\nimport Card from \"./Card\";\n\nconst List = props => {\n  const _useState = useState(parseInt(props.valueMin)),\n        _useState2 = _slicedToArray(_useState, 2),\n        valueMin = _useState2[0],\n        setValueMin = _useState2[1];\n\n  const _useState3 = useState(parseInt(props.valueMax)),\n        _useState4 = _slicedToArray(_useState3, 2),\n        valueMax = _useState4[0],\n        setValueMax = _useState4[1];\n\n  const _useState5 = useState(props.restaurantDisplay),\n        _useState6 = _slicedToArray(_useState5, 2),\n        restaurantDisplay = _useState6[0],\n        setRestaurantDisplay = _useState6[1];\n\n  const moyenneAvis = restaurant => {\n    var restaurantSelect = props.restaurantDisplay.filter(feature => feature.restaurantID === restaurant.restaurantID);\n    const totalStars = restaurant.ratings.map(rating => rating.stars).reduce((previousValue, currentValue, index, array) => {\n      var value = index + 1 === array.length ? (previousValue + currentValue) / array.length : previousValue + currentValue;\n      restaurantSelect[0].average = parseFloat(value.toFixed(1));\n      return value;\n    });\n    restaurantSelect[0].average = parseFloat(totalStars.toFixed(1));\n  };\n\n  {\n    restaurantData.features.map(restaurant => moyenneAvis(restaurant));\n  }\n  console.log(props.restaurantDisplay); //var restaurantDisplay = restaurantData.features.filter(feature => feature.average >= parseInt(props.valueMin) && feature.average <= parseInt(props.valueMax));\n\n  return props.restaurantDisplay ? React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.restaurantDisplay.map(restaurant => React.createElement(Card, {\n    display: true,\n    displayDetails: false,\n    restaurant: restaurant,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Chargement des restaurants...\");\n};\n\nexport default List;","map":{"version":3,"sources":["/Users/simonfauvre/Documents/GitHub/P7/src/List.js"],"names":["React","useState","restaurantData","Card","List","props","parseInt","valueMin","setValueMin","valueMax","setValueMax","restaurantDisplay","setRestaurantDisplay","moyenneAvis","restaurant","restaurantSelect","filter","feature","restaurantID","totalStars","ratings","map","rating","stars","reduce","previousValue","currentValue","index","array","value","length","average","parseFloat","toFixed","features","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,YAAP;AACA,OAAO,KAAKC,cAAZ,MAAgC,wBAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA,oBAEcJ,QAAQ,CAACK,QAAQ,CAACD,KAAK,CAACE,QAAP,CAAT,CAFtB;AAAA;AAAA,QAEXA,QAFW;AAAA,QAEDC,WAFC;;AAAA,qBAGcP,QAAQ,CAACK,QAAQ,CAACD,KAAK,CAACI,QAAP,CAAT,CAHtB;AAAA;AAAA,QAGXA,QAHW;AAAA,QAGDC,WAHC;;AAAA,qBAIgCT,QAAQ,CAACI,KAAK,CAACM,iBAAP,CAJxC;AAAA;AAAA,QAIXA,iBAJW;AAAA,QAIQC,oBAJR;;AAMlB,QAAMC,WAAW,GAAIC,UAAD,IAAgB;AAChC,QAAIC,gBAAgB,GAAGV,KAAK,CAACM,iBAAN,CAAwBK,MAAxB,CAA+BC,OAAO,IAAIA,OAAO,CAACC,YAAR,KAAyBJ,UAAU,CAACI,YAA9E,CAAvB;AACA,UAAMC,UAAU,GAAGL,UAAU,CAACM,OAAX,CAAmBC,GAAnB,CAAuBC,MAAM,IAAIA,MAAM,CAACC,KAAxC,EAA+CC,MAA/C,CAAsD,CAACC,aAAD,EAAgBC,YAAhB,EAA8BC,KAA9B,EAAqCC,KAArC,KAA+C;AACpH,UAAIC,KAAK,GAAGF,KAAK,GAAG,CAAR,KAAcC,KAAK,CAACE,MAApB,GAA6B,CAACL,aAAa,GAAGC,YAAjB,IAAiCE,KAAK,CAACE,MAApE,GAA6EL,aAAa,GAAGC,YAAzG;AACAX,MAAAA,gBAAgB,CAAC,CAAD,CAAhB,CAAoBgB,OAApB,GAA8BC,UAAU,CAACH,KAAK,CAACI,OAAN,CAAc,CAAd,CAAD,CAAxC;AACA,aAAOJ,KAAP;AACH,KAJkB,CAAnB;AAKAd,IAAAA,gBAAgB,CAAC,CAAD,CAAhB,CAAoBgB,OAApB,GAA8BC,UAAU,CAACb,UAAU,CAACc,OAAX,CAAmB,CAAnB,CAAD,CAAxC;AACH,GARD;;AAUA;AAAC/B,IAAAA,cAAc,CAACgC,QAAf,CAAwBb,GAAxB,CAA4BP,UAAU,IACnCD,WAAW,CAACC,UAAD,CADd;AAEE;AAEHqB,EAAAA,OAAO,CAACC,GAAR,CAAY/B,KAAK,CAACM,iBAAlB,EApBkB,CAqBlB;;AAEA,SAAON,KAAK,CAACM,iBAAN,GACH;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACM,iBAAN,CAAwBU,GAAxB,CAA4BP,UAAU,IACnC,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,IAAf;AAAqB,IAAA,cAAc,EAAE,KAArC;AAA4C,IAAA,UAAU,EAAEA,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADG,GAML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCANF;AAOH,CA9BD;;AAgCA,eAAeV,IAAf","sourcesContent":["import React, {useState} from \"react\";\nimport \"./List.css\";\nimport * as restaurantData from \"./data/restaurant.json\";\nimport Card from \"./Card\";\n\nconst List = props => {\n\n    const [valueMin, setValueMin] = useState(parseInt(props.valueMin));\n    const [valueMax, setValueMax] = useState(parseInt(props.valueMax));\n    const [restaurantDisplay, setRestaurantDisplay] = useState(props.restaurantDisplay);\n\n    const moyenneAvis = (restaurant) => {\n        var restaurantSelect = props.restaurantDisplay.filter(feature => feature.restaurantID === restaurant.restaurantID);\n        const totalStars = restaurant.ratings.map(rating => rating.stars).reduce((previousValue, currentValue, index, array) => {\n            var value = index + 1 === array.length ? (previousValue + currentValue) / array.length : previousValue + currentValue;\n            restaurantSelect[0].average = parseFloat(value.toFixed(1));\n            return value;\n        });\n        restaurantSelect[0].average = parseFloat(totalStars.toFixed(1));\n    }\n\n    {restaurantData.features.map(restaurant => (\n        moyenneAvis(restaurant)\n    ))}\n\n    console.log(props.restaurantDisplay);\n    //var restaurantDisplay = restaurantData.features.filter(feature => feature.average >= parseInt(props.valueMin) && feature.average <= parseInt(props.valueMax));\n\n    return(props.restaurantDisplay ?\n        <ul className=\"list\">\n            {props.restaurantDisplay.map(restaurant => (\n                <Card display={true} displayDetails={false} restaurant={restaurant} />\n            ))}\n        </ul>\n    : <div>Chargement des restaurants...</div>);\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}