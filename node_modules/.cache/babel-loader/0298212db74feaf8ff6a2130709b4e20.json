{"ast":null,"code":"import _objectSpread from \"/Users/simonfauvre/Documents/GitHub/P7/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/simonfauvre/Documents/GitHub/P7/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/simonfauvre/Documents/GitHub/P7/src/components/Card_Details.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport \"../style/Card_Details.css\"; //import * as restaurantData from \"../data/restaurant.json\";\n\nimport RestaurantContext from \"./RestaurantContext\";\n\nconst CardDetails = props => {\n  const _useContext = useContext(RestaurantContext),\n        restaurants = _useContext.restaurants,\n        updateRestaurants = _useContext.updateRestaurants;\n\n  const _useState = useState(restaurants.filter(restau => restau.restaurantID === props.restaurant.restaurantID)[0]),\n        _useState2 = _slicedToArray(_useState, 2),\n        restaurant = _useState2[0],\n        setRestaurant = _useState2[1];\n\n  const _useState3 = useState(props.moyenneAvis),\n        _useState4 = _slicedToArray(_useState3, 2),\n        moyenneAvis = _useState4[0],\n        setMoyenneAvis = _useState4[1];\n\n  const _useState5 = useState(\"Insérer un nouveau commentaire\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        avis = _useState6[0],\n        setAvis = _useState6[1];\n\n  const _useState7 = useState(1),\n        _useState8 = _slicedToArray(_useState7, 2),\n        note = _useState8[0],\n        setNote = _useState8[1];\n\n  var imgSrc = \"https://maps.googleapis.com/maps/api/streetview?size=312x240&location=\" + restaurant.lat + \",\" + restaurant.long + \"&heading=151.78&pitch=-0.76&key=AIzaSyBbXlKpycaKnkWqib5h17gluphKw_nLENs\";\n\n  const addCommentToJson = (commentaire, restaurant) => {\n    var restaurantSelect = restaurants.filter(feature => feature.restaurantID === restaurant.restaurantID);\n    var newAvis = {};\n    newAvis.stars = note;\n    newAvis.comment = commentaire;\n    restaurantSelect[0].ratings.push(newAvis);\n    setRestaurant(_objectSpread({}, restaurant, {\n      restaurant: restaurantSelect[0]\n    }));\n    setAvis(\"Insérer un nouveau commentaire\");\n    document.getElementsByClassName(\"textCommentaire\")[0].style.color = \"grey\";\n    moyenneNote(restaurant);\n  };\n\n  const resetInput = e => {\n    e.target.style.color = \"white\";\n    e.target.value = \"\";\n  };\n\n  const handleMinChange = e => {\n    setNote(parseInt(e.target.value));\n  };\n\n  useEffect(() => {\n    setNote(note);\n  }, [note]);\n\n  const moyenneNote = restaurant => {\n    let tmp;\n    let ratingsLength = restaurant.ratings.length;\n    restaurant.ratings.map(note => console.log(note));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"detailsRestaurant\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"imgRestaurantDetails\",\n    src: imgSrc,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"infoRestaurantDetails\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, restaurant.restaurantName), React.createElement(\"div\", {\n    className: \"moyenneAvis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"moyenneAvisText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, moyenneAvis), React.createElement(\"img\", {\n    className: \"etoileAvis\",\n    src: \"etoile.png\",\n    alt: \"Etoile des avis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"adresse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, restaurant.address))), restaurant.ratings.map(avis => React.createElement(\"div\", {\n    className: \"note\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, avis.stars), React.createElement(\"img\", {\n    src: \"etoile.png\",\n    className: \"imgAvisDetails\",\n    alt: \"Etoile des avis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"avis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, avis.comment))), React.createElement(\"div\", {\n    className: \"newComment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"selectNote\",\n    id: \"selectNote\",\n    value: note,\n    onChange: e => handleMinChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"1\"), React.createElement(\"option\", {\n    value: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"2\"), React.createElement(\"option\", {\n    value: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"3\"), React.createElement(\"option\", {\n    value: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"4\"), React.createElement(\"option\", {\n    value: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"5\")), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"textCommentaire\",\n    name: \"Commentaire\",\n    value: avis,\n    onClick: resetInput,\n    onChange: e => setAvis(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btnAjoutCommentaire\",\n    value: \"\\u2192\",\n    onClick: () => addCommentToJson(avis, restaurant),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })));\n};\n\nexport default CardDetails;","map":{"version":3,"sources":["/Users/simonfauvre/Documents/GitHub/P7/src/components/Card_Details.js"],"names":["React","useState","useContext","useEffect","RestaurantContext","CardDetails","props","restaurants","updateRestaurants","filter","restau","restaurantID","restaurant","setRestaurant","moyenneAvis","setMoyenneAvis","avis","setAvis","note","setNote","imgSrc","lat","long","addCommentToJson","commentaire","restaurantSelect","feature","newAvis","stars","comment","ratings","push","document","getElementsByClassName","style","color","moyenneNote","resetInput","e","target","value","handleMinChange","parseInt","tmp","ratingsLength","length","map","console","log","restaurantName","address"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from \"react\";\nimport \"../style/Card_Details.css\";\n//import * as restaurantData from \"../data/restaurant.json\";\nimport RestaurantContext from \"./RestaurantContext\";\n\nconst CardDetails = props => {\n\n    const {restaurants, updateRestaurants} = useContext(RestaurantContext);\n    const [restaurant, setRestaurant] = useState(restaurants.filter(restau => restau.restaurantID === props.restaurant.restaurantID)[0]);\n    const [moyenneAvis, setMoyenneAvis] = useState(props.moyenneAvis);\n    const [avis, setAvis] = useState(\"Insérer un nouveau commentaire\");\n    const [note, setNote] = useState(1);\n    var imgSrc = \"https://maps.googleapis.com/maps/api/streetview?size=312x240&location=\" + restaurant.lat + \",\" + restaurant.long + \"&heading=151.78&pitch=-0.76&key=AIzaSyBbXlKpycaKnkWqib5h17gluphKw_nLENs\";\n\n    const addCommentToJson = (commentaire, restaurant) => {\n        var restaurantSelect = restaurants.filter(feature => feature.restaurantID === restaurant.restaurantID);\n        var newAvis = {};\n        newAvis.stars = note;\n        newAvis.comment = commentaire;\n        restaurantSelect[0].ratings.push(newAvis);\n\n        setRestaurant({...restaurant, restaurant: restaurantSelect[0]});\n\n        setAvis(\"Insérer un nouveau commentaire\");\n        document.getElementsByClassName(\"textCommentaire\")[0].style.color = \"grey\";\n        moyenneNote(restaurant);\n    }\n\n    const resetInput = (e) => {\n        e.target.style.color = \"white\";\n        e.target.value = \"\";\n    }\n\n    const handleMinChange = (e) => {\n        setNote(parseInt(e.target.value));\n    }\n    useEffect(() => {\n      setNote(note);\n    },[note])\n\n    const moyenneNote = (restaurant) => {\n        let tmp;\n        let ratingsLength = restaurant.ratings.length;\n        restaurant.ratings.map(note =>\n            \n            console.log(note)\n        );\n    }\n\n    return(\n        <div className=\"details\">\n            <div className=\"detailsRestaurant\">\n                <img className=\"imgRestaurantDetails\" src={imgSrc} alt=\"\"></img>\n                <div className=\"infoRestaurantDetails\">\n                    <h2>{restaurant.restaurantName}</h2>\n                    <div className=\"moyenneAvis\">\n                        <span className=\"moyenneAvisText\">{moyenneAvis}</span>\n                        <img className=\"etoileAvis\" src=\"etoile.png\" alt=\"Etoile des avis\"></img>\n                    </div>\n                    <div className=\"adresse\">{restaurant.address}</div>\n                </div>\n            </div>\n            {restaurant.ratings.map(avis => (\n                <div className=\"note\">\n                    <span>{avis.stars}</span>\n                    <img src=\"etoile.png\" className=\"imgAvisDetails\" alt=\"Etoile des avis\"></img>\n                    <div className=\"avis\">{avis.comment}</div>\n                </div>\n            ))}\n            <div className=\"newComment\">\n                <select className=\"selectNote\" id=\"selectNote\" value={note} onChange={e => handleMinChange(e)}>\n                    <option value={1}>1</option>\n                    <option value={2}>2</option>\n                    <option value={3}>3</option>\n                    <option value={4}>4</option>\n                    <option value={5}>5</option>\n                </select>\n                <input type=\"text\" className=\"textCommentaire\" name=\"Commentaire\" value={avis} onClick={resetInput} onChange={(e) => setAvis(e.target.value)}></input>\n                <input type=\"submit\" className=\"btnAjoutCommentaire\" value=\"→\" onClick={() => addCommentToJson(avis, restaurant)}></input>\n            </div>\n        </div>\n    );\n}\n\nexport default CardDetails;"]},"metadata":{},"sourceType":"module"}