{"version":3,"sources":["style/mapStyle.js","components/RestaurantContext.js","components/Map.js","components/Card_Details.js","components/Card.js","components/List.js","components/PanelRight.js","components/App.js","index.js"],"names":["React","createContext","restaurants","updateRestaurants","restaurant","WrappedMap","withScriptjs","withGoogleMap","props","useContext","RestaurantContext","handleMarkerClick","tmpRestaurants","setUpdateTmpRestaurants","useState","selectedRestaurant","setSelectedRestaurant","selectedLocation","setSelectedLocation","lat","lng","center","setCenter","addResto","setAddResto","useEffect","location","tmpLocRestaurant","setTmpLocRestaurant","dragMap","fetchRestaurants","map","getCenter","setMap","test","e","onClickMarkerRestaurant","open","restaurantID","avis","setAvis","note","setNote","nom","setNom","adresse","setAdresse","ref","onDragEnd","onClick","event","latLng","clickMap","defaultZoom","defaultCenter","defaultOptions","styles","mapStyle","disableDefaultUI","zoomControl","zoomControlOptions","style","window","google","maps","ZoomControlStyle","SMALL","mapTypeControl","mapTypeControlOptions","MapTypeControlStyle","DROPDOWN_MENU","position","ControlPosition","TOP_RIGHT","animation","Animation","DROP","icon","url","scaledSize","Size","options","pixelOffset","onCloseClick","fontSize","key","restaurantName","className","width","marginRight","marginTop","color","type","name","placeholder","value","onChange","target","id","parseInt","address","stars","comment","tmpResto","ratings","average","ratingsTotal","img","addRestaurant","CardDetails","updateTmpRestaurants","filter","restau","setRestaurant","moyenneAvis","setMoyenneAvis","imgSrc","moyenneNote","ratingsLength","length","moyennePrevious","moyenne","parseFloat","toFixed","tmp","src","alt","handleMinChange","commentaire","restaurantSelect","feature","newAvis","push","document","getElementsByClassName","addCommentToJson","Card","alreadyGet","setAlreadyGet","getRatingsRestaurant","fetch","then","res","json","data","transformDatas","catch","err","console","log","result","reviews","dataReviews","tmpRestaurant","review","tmpReview","rating","text","displayDetails","marginBottom","List","PanelRight","noteMin","setNoteMin","noteMax","setNoteMax","filterDatas","href","handleMaxChange","valueMin","valueMax","App","setRestaurants","setTmpRestaurants","setLocation","errorGeolocation","setErrorGeolocation","transformAvis","contextValue","array","j","i","elementTmp","elementRestaurant","navigator","geolocation","getCurrentPosition","tmpLocation","coords","latitude","longitude","errorPosition","error","datas","allRestaurantTransform","results","place_id","vicinity","geometry","user_ratings_total","photos","photo_reference","Provider","height","googleMapURL","loadingElement","containerElement","mapElement","marginLeft","textAlign","ReactDOM","render","getElementById"],"mappings":"qXAAe,GACX,CACI,YAAe,MACf,YAAe,SACf,QAAW,CACP,CACI,WAAc,QAI1B,CACI,YAAe,MACf,YAAe,mBACf,QAAW,CACP,CACI,WAAc,IAElB,CACI,MAAS,WAEb,CACI,UAAa,MAIzB,CACI,YAAe,MACf,YAAe,qBACf,QAAW,CACP,CACI,WAAc,MAElB,CACI,MAAS,WAEb,CACI,UAAa,MAIzB,CACI,YAAe,MACf,YAAe,cACf,QAAW,CACP,CACI,WAAc,SAI1B,CACI,YAAe,iBACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,UAAa,MAIzB,CACI,YAAe,iBACf,YAAe,kBACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,UAAa,IAEjB,CACI,OAAU,OAItB,CACI,YAAe,yBACf,YAAe,mBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,0BACf,YAAe,mBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,8BACf,YAAe,mBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,YACf,YAAe,WACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,UAAa,MAIzB,CACI,YAAe,MACf,YAAe,WACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,UAAa,IAEjB,CACI,WAAc,QAI1B,CACI,YAAe,eACf,YAAe,WACf,QAAW,CACP,CACI,WAAc,QAI1B,CACI,YAAe,eACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,UAAa,OAIzB,CACI,YAAe,eACf,YAAe,kBACf,QAAW,CACP,CACI,WAAc,SAI1B,CACI,YAAe,eACf,YAAe,mBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,gBACf,YAAe,WACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,UAAa,MAIzB,CACI,YAAe,gBACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,gBACf,YAAe,mBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,gBACf,YAAe,qBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,aACf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","file":"static/js/main.0f57ba31.chunk.js","sourcesContent":["export default [\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"saturation\": 36\n            },\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 40\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 17\n            },\n            {\n                \"weight\": 1.2\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative.country\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#838383\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative.locality\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#c4c4c4\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative.neighborhood\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#aaaaaa\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 21\n            },\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.business\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#6e6e6e\"\n            },\n            {\n                \"lightness\": \"0\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 18\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#575757\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#2c2c2c\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#999999\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 19\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n    }\n]","import React from 'react';\n\nexport default React.createContext({\n    restaurants: [],\n    updateRestaurants: (restaurant) => {}\n})","import React, { useState, useContext, useEffect } from 'react'\nimport '../style/App.css'\nimport '../style/Map.css'\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from 'react-google-maps'\nimport mapStyle from \"../style/mapStyle.js\"\nimport RestaurantContext from \"./RestaurantContext\"\n\nconst Map = props => {\n\n  const { restaurants, updateRestaurants, handleMarkerClick } = useContext(RestaurantContext)\n  const { tmpRestaurants, setUpdateTmpRestaurants } = useContext(RestaurantContext);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null)\n  const [selectedLocation, setSelectedLocation] = useState(null)\n  const [center, setCenter] = useState({lat: null, lng: null})\n  const [addResto, setAddResto] = useState(false)\n\n  useEffect(() => {\n    setCenter(props.location)\n  }, [props.location])\n\n  const [tmpLocRestaurant, setTmpLocRestaurant] = useState({lat: null, lng: null})\n\n  const clickMap = (event) => {\n    setAddResto(true)\n    setTmpLocRestaurant({lat: event.latLng.lat(), lng: event.latLng.lng()})\n  }\n\n  const addRestaurant = (name, address, stars, comment) => {\n    let tmpResto = {}\n    tmpResto.restaurantID = name + '-ID'\n    tmpResto.restaurantName = name\n    tmpResto.address = address\n    tmpResto.lat = tmpLocRestaurant.lat\n    tmpResto.lng = tmpLocRestaurant.lng\n    tmpResto.ratings = [{\n      comment: comment,\n      stars: stars\n    }]\n    tmpResto.average = stars\n    tmpResto.ratingsTotal = 1\n    tmpResto.img = '/logo_resto.png'\n\n    updateRestaurants([...restaurants, tmpResto])\n    setUpdateTmpRestaurants([...tmpRestaurants, tmpResto])\n\n    setAddResto(false)\n    setNom('')\n    setAdresse('')\n    setNote(1)\n    setAvis('')\n  }\n\n  const dragMap = () => {\n    props.fetchRestaurants(map.getCenter().lat(), map.getCenter().lng())\n  }\n\n  const [map, setMap] = useState()\n\n  const test = (e) => {\n    setMap(e)\n  }\n\n  const onClickMarkerRestaurant = (restaurant, open) => {\n    handleMarkerClick(restaurant.restaurantID, open)\n    open === true ? setSelectedRestaurant(restaurant) : setSelectedRestaurant(null)\n    setSelectedLocation(null)\n  }\n\n  const initMap = () => {\n    return (\n    <GoogleMap\n      ref={test}\n      onDragEnd={dragMap} \n      onClick={(event) => clickMap(event)}\n      defaultZoom={15}\n      defaultCenter={{ lat: 45.764042, lng: 4.835659 }}\n      center={center}\n      defaultOptions={{\n        styles: mapStyle,\n        disableDefaultUI: true,\n        zoomControl: true,\n        zoomControlOptions: {\n          style: window.google.maps.ZoomControlStyle.SMALL,\n        },\n        mapTypeControl: true,\n        mapTypeControlOptions: {\n          style: window.google.maps.MapTypeControlStyle.DROPDOWN_MENU,\n          position: window.google.maps.ControlPosition.TOP_RIGHT\n        }\n      }}>\n      {/* Marker Utilisateur */}\n      <Marker\n        position={center}\n        animation={window.google.maps.Animation.DROP}\n        onClick={() => {\n          setSelectedLocation(center);\n          setSelectedRestaurant(null);\n        }}\n        icon={{\n          url: \"/here.png\",\n          scaledSize: new window.google.maps.Size(20, 20)\n        }} />\n\n      {/* InfoWindow Utilisateur */}\n      {selectedLocation && (\n        <InfoWindow\n          position={center}\n          options={{ pixelOffset: new window.google.maps.Size(0, -20) }}\n          onCloseClick={() => {\n            setSelectedLocation(null);\n          }}>\n          <div>\n            <h2 style={{ fontSize: \"14px\" }}>Vous êtes ici</h2>\n          </div>\n        </InfoWindow>\n      )}\n\n      {/* Marker Restaurant */}\n      {restaurants.map(restaurant => (\n        <Marker\n          onClick={() => onClickMarkerRestaurant(restaurant, true)}\n          animation={window.google.maps.Animation.DROP}\n          key={restaurant.restaurantID}\n          position={{ lat: restaurant.lat, lng: restaurant.lng }}\n          icon={{\n            url: \"/logo_resto.png\",\n            scaledSize: new window.google.maps.Size(30, 30)\n          }} />\n      ))}\n\n      {/* InfoWindow Restaurant */}\n      {selectedRestaurant && (\n        <InfoWindow\n          position={{ lat: selectedRestaurant.lat, lng: selectedRestaurant.lng }}\n          onCloseClick={() => onClickMarkerRestaurant(selectedRestaurant, false)}\n          options={{ pixelOffset: new window.google.maps.Size(0, -30) }}>\n          <div>\n            <h2 style={{ fontSize: 14 }}>{selectedRestaurant.restaurantName}</h2>\n          </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n    )\n  }\n\n  const [avis, setAvis] = useState('')\n  const [note, setNote] = useState(1)\n  const [nom, setNom] = useState('')\n  const [adresse, setAdresse] = useState('')\n\n  return (\n    <div>\n      {initMap()}\n      {addResto ? \n        <div className='addResto'>\n          <h3>Ajouter un restaurant</h3>\n          <div className='inputNom'>\n            <div style={{width: '221px', marginRight: '10px', marginTop: '16px', color: 'white'}}>Nom du restaurant</div>\n            <input type=\"text\" className=\"textNomRestaurant\" name=\"Nom du restaurant\" placeholder='Le Fourvière' value={nom} onChange={(e) => {setNom(e.target.value); e.target.style.color = \"white\"}}></input>\n          </div>\n          <div className='inputAdresse'>\n            <div style={{marginRight: '10px', marginTop: '16px', color: 'white'}}>Adresse</div>\n            <input type=\"text\" className=\"textAdresse\" name=\"Adresse\" placeholder='8 place de Fourvière, Lyon' value={adresse} onChange={(e) => {setAdresse(e.target.value); e.target.style.color = \"white\"}}></input>\n          </div>\n          <div className=\"newComment\">\n                <select className=\"selectNote\" id=\"note\" value={note} onChange={e => setNote(parseInt(e.target.value))}>\n                    <option value={1}>1</option>\n                    <option value={2}>2</option>\n                    <option value={3}>3</option>\n                    <option value={4}>4</option>\n                    <option value={5}>5</option>\n                </select>\n                <input type=\"text\" className=\"textCommentaire\" name=\"Commentaire\" placeholder='Insérer un nouveau commentaire' value={avis} onChange={(e) => {setAvis(e.target.value); e.target.style.color = \"white\"}}></input>\n            </div>\n            <input type=\"submit\" className=\"btnAjoutRestaurant\" value=\"Ajouter\" onClick={() => addRestaurant(nom, adresse, note, avis)}></input>\n        </div> \n        : null}\n    </div>\n  )\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\nexport default WrappedMap;","import React, { useState, useContext, useEffect } from \"react\";\nimport \"../style/Card_Details.css\";\nimport RestaurantContext from \"./RestaurantContext\";\n\nconst CardDetails = props => {\n\n    const { tmpRestaurants, updateTmpRestaurants} = useContext(RestaurantContext);\n    const [restaurant, setRestaurant] = useState(tmpRestaurants.filter(restau => restau.restaurantID === props.restaurant.restaurantID)[0]);\n    const [moyenneAvis, setMoyenneAvis] = useState(restaurant.average);\n    const [avis, setAvis] = useState('');\n    const [note, setNote] = useState(1);\n\n    var imgSrc = \"https://maps.googleapis.com/maps/api/streetview?size=312x240&location=\" + restaurant.lat + \",\" + restaurant.lng + \"&heading=151.78&pitch=-0.76&key=AIzaSyDhYcj8hX50sSL6zzWj_G68tIep3P5MWog\";\n\n    const addCommentToJson = (commentaire, restaurant) => {\n        var restaurantSelect = tmpRestaurants.filter(feature => feature.restaurantID === restaurant.restaurantID);\n        var newAvis = {};\n        newAvis.stars = note;\n        newAvis.comment = commentaire;\n        restaurantSelect[0].ratings.push(newAvis);\n        restaurantSelect[0].ratingsTotal = restaurantSelect[0].ratingsTotal + 1;\n\n        setRestaurant({ ...restaurant, restaurant: restaurantSelect[0] });\n        setAvis('')\n        document.getElementsByClassName(\"textCommentaire\")[0].style.color = \"grey\";\n        moyenneNote(restaurant);\n    }\n\n    const handleMinChange = (e) => {\n        setNote(parseInt(e.target.value));\n    }\n    useEffect(() => {\n        setNote(note);\n    }, [note])\n\n    const moyenneNote = (restaurant) => {\n        let ratingsLength = restaurant.ratings.length;\n        let moyennePrevious = restaurant.average;\n        restaurant.ratings.map(note =>\n            restaurant.average += note.stars\n        );\n\n        let ratingsTotalM1 = (restaurant.ratingsTotal - 1)\n        let note = restaurant.ratings[ratingsLength - 1].stars\n        let ratingsTotal = restaurant.ratingsTotal\n\n        let moyenne = ((moyennePrevious * ratingsTotalM1) + note) / ratingsTotal;\n        restaurant.average = parseFloat(moyenne.toFixed(2));\n        setMoyenneAvis(restaurant.average);\n\n        let tmp = tmpRestaurants;\n        tmp.map(restau =>\n            restau.restaurantID === restaurant.restaurantID ?\n                restau = restaurant : null\n        )\n\n        updateTmpRestaurants(tmp);\n    }\n\n    return (\n        <div className=\"details\">\n            <div className=\"detailsRestaurant\">\n                <img className=\"imgRestaurantDetails\" src={imgSrc} alt=\"\"></img>\n                <div className=\"infoRestaurantDetails\">\n                    <h2>{restaurant.restaurantName}</h2>\n                    <div className=\"moyenneAvis\">\n                        <span className=\"moyenneAvisText\">{moyenneAvis}</span>\n                        <img className=\"etoileAvis\" src=\"etoile.png\" alt=\"Etoile des avis\"></img>\n                        <span className=\"nbRatings\">{restaurant.ratingsTotal} avis</span>\n                    </div>\n                    <div className=\"adresse\">{restaurant.address}</div>\n                </div>\n            </div>\n            {restaurant.ratings.map(avis => (\n                <div className=\"note\">\n                    <span>{avis.stars}</span>\n                    <img src=\"etoile.png\" className=\"imgAvisDetails\" alt=\"Etoile des avis\"></img>\n                    <div className=\"avis\">{avis.comment}</div>\n                </div>\n            ))}\n            <div className=\"newComment\">\n                <select className=\"selectNote\" id=\"selectNote\" value={note} onChange={e => handleMinChange(e)}>\n                    <option value={1}>1</option>\n                    <option value={2}>2</option>\n                    <option value={3}>3</option>\n                    <option value={4}>4</option>\n                    <option value={5}>5</option>\n                </select>\n                <input type=\"text\" className=\"textCommentaire\" name=\"Commentaire\" placeholder='Insérer un nouveau commentaire' value={avis} onChange={(e) => {setAvis(e.target.value); e.target.style.color = \"white\"}}></input>\n                <input type=\"submit\" className=\"btnAjoutCommentaire\" value=\"→\" onClick={() => addCommentToJson(avis, restaurant)}></input>\n            </div>\n        </div>\n    );\n}\n\nexport default CardDetails;","import React, { useState, useEffect, useContext } from \"react\";\nimport \"../style/Card.css\";\nimport CardDetails from \"./Card_Details\";\nimport RestaurantContext from \"./RestaurantContext\";\n\nconst Card = props => {\n\n    const { tmpRestaurants, updateTmpRestaurants } = useContext(RestaurantContext);\n    const [restaurant, setRestaurant] = useState(tmpRestaurants.filter(restau => restau.restaurantID === props.restaurantID)[0]);\n    const [alreadyGet, setAlreadyGet] = useState(false);\n\n    // Agit sur le state et pas la props\n    const changeDisplayDetails = (e) => {\n        if (e.target.className !== \"selectNote\" && e.target.className !== \"textCommentaire\" && e.target.className !== \"btnAjoutCommentaire\") {\n            setRestaurant({ ...restaurant, displayDetails: !restaurant.displayDetails });\n\n            let tmp = tmpRestaurants;\n            tmp.map(restau =>\n                restau.restaurantID === restaurant.restaurantID ? restau.displayDetails = !restaurant.displayDetails : false\n            )\n            \n            if (!alreadyGet) {\n                getRatingsRestaurant(restaurant);\n                setAlreadyGet(true);\n            }\n            updateTmpRestaurants(tmp);\n        }\n    }\n\n    const getRatingsRestaurant = (restaurant) => {\n        fetch(`https://maps.googleapis.com/maps/api/place/details/json?place_id=${restaurant.restaurantID}&fields=name,rating,reviews,geometry,formatted_address,photos,place_id&key=AIzaSyA1j6BRMbbmh3M1qFh9jGzbFAa5NxGVbHI`)\n        .then((res) => res.json())\n        .then(data => transformDatas(data))\n        .then(data => {\n            updateTmpRestaurants([...tmpRestaurants])\n        })\n        .catch((err) => console.log(err))\n    }\n\n    const transformDatas = (data) => { \n        if (data.result.reviews) {\n            let restaurantTransform = []\n            let dataReviews = data.result.reviews\n            let tmpRestaurant = restaurant\n\n            dataReviews.map(review => {\n                let tmpReview = {}\n                tmpReview.stars = review.rating\n                tmpReview.comment = review.text\n                tmpRestaurant.ratings.push(tmpReview)\n            })\n            \n            restaurantTransform.push(tmpRestaurant)\n            return tmpRestaurant\n        } else {\n            return null\n        }\n    }\n\n    return (\n        <div className=\"card\">\n            <li\n                key={restaurant.restaurantID}\n                className=\"itemList\"\n                id={\"restaurant-\" + restaurant.restaurantID}\n                onClick={changeDisplayDetails}>\n                {tmpRestaurants.filter(restau => restau.restaurantID === props.restaurantID)[0].displayDetails ?\n                    <CardDetails restaurant={restaurant} /> :\n                    <div className=\"cardRestaurant\">\n                        <img className=\"imgRestaurant\" src={restaurant.img} alt=\"Le restaurant\"></img>\n                        <div style={{ marginTop: \"auto\", marginBottom: \"auto\" }}>\n                            <h2>{restaurant.restaurantName}</h2>\n                            <div className=\"moyenneAvis\">\n                                <span className=\"moyenneAvisText\">\n                                    {tmpRestaurants.filter(restau => restau.restaurantID === props.restaurantID)[0].average}\n                                </span>\n                                <img src=\"etoile.png\" className=\"etoileAvis\" alt=\"Etoile des avis\"></img>\n                                <span className=\"nbRatings\">{tmpRestaurants.filter(restau => restau.restaurantID === props.restaurantID)[0].ratingsTotal} avis</span>\n                            </div>\n                            <div className=\"adresse\">{restaurant.address}</div>\n                        </div>\n                    </div>}\n            </li>\n        </div>\n    );\n}\n\nexport default Card;","import React, { useContext, useEffect } from \"react\";\nimport \"../style/List.css\";\nimport Card from \"./Card\";\nimport RestaurantContext from \"./RestaurantContext\";\n\nconst List = props => {\n\n    const { tmpRestaurants, updateTmpRestaurants } = useContext(RestaurantContext);\n\n    return (tmpRestaurants ?\n        <ul className=\"list\">\n            {tmpRestaurants.map(restaurant => (\n                <Card key={restaurant.restaurantID} restaurantID={restaurant.restaurantID} />\n                \n            ))}\n        </ul>\n\n        : <div>Chargement des restaurants...</div>\n    );\n}\n\nexport default List;","import React, {useState, useEffect, useContext} from \"react\";\nimport \"../style/PanelRight.css\";\nimport List from \"./List\";\nimport RestaurantContext from \"./RestaurantContext\";\n\nconst PanelRight = props => {\n\n    const {restaurants, updateRestaurants} = useContext(RestaurantContext);\n    const {tmpRestaurants, updateTmpRestaurants} = useContext(RestaurantContext);\n\n    const [noteMin, setNoteMin] = useState(1);\n    const [noteMax, setNoteMax] = useState(5);\n\n    const handleMinChange = (e) => {\n        setNoteMin(parseInt(e.target.value));\n    }\n\n    useEffect(() => {\n      setNoteMin(noteMin);\n      setNoteMax(noteMax);\n\n      filterDatas();\n    },[noteMin,noteMax])\n\n    const handleMaxChange = (e) => {\n        setNoteMax(parseInt(e.target.value));\n    }\n\n    const filterDatas = () => {\n        if (restaurants) {\n            updateTmpRestaurants(\n                restaurants.filter(restaurant => {\n                    if (restaurant.average === null && noteMin === 1 && noteMax === 5) {\n                        return restaurant\n                    } else if (restaurant.average >= noteMin && restaurant.average <= noteMax) {\n                        return restaurant\n                    }\n                }));\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"sectionTitre\">\n                <div className=\"titreSite\"><a href=\"\" className=\"titre\">Restaurants</a></div>\n                <div className=\"filtreAvis\">\n                    <select id=\"select-min\" value={noteMin} onChange={e => handleMinChange(e)}>\n                        <option value={1}>1</option>\n                        <option value={2}>2</option>\n                        <option value={3}>3</option>\n                        <option value={4}>4</option>\n                        <option value={5}>5</option>\n                    </select>\n                    <span>à</span>\n                    <select id=\"select-max\" value={noteMax} onChange={e => handleMaxChange(e)}>\n                        <option value={1}>1</option>\n                        <option value={2}>2</option>\n                        <option value={3}>3</option>\n                        <option value={4}>4</option>\n                        <option value={5}>5</option>\n                    </select>\n                    <span>étoiles</span>\n                </div>\n            </div>\n            <List valueMin={noteMin} valueMax={noteMax}/>\n        </div>\n    )\n}\n\nexport default PanelRight;","import React, { useState, useEffect } from \"react\";\nimport \"../style/PanelRight.css\";\nimport WrappedMap from \"./Map\";\nimport PanelRight from \"./PanelRight\";\nimport RestaurantsContext from \"./RestaurantContext\";\n\nconst App = () => {\n\n  const [restaurants, setRestaurants] = useState([])\n  const [tmpRestaurants, setTmpRestaurants] = useState([])\n  const [location, setLocation] = useState({lat: null, lng: null})\n  const [errorGeolocation, setErrorGeolocation] = useState(false)\n\n  // Cette fonction mutate le state de App.js et est passée à la Map\n  const handleMarkerClick = (id, open) => {\n    let selectedRestaurant\n    const tmpRestaurants = restaurants.map(restaurant => {\n      if (restaurant.restaurantID === id) {\n        selectedRestaurant = restaurant\n        if (open) {\n          restaurant.displayDetails = true\n        } else {\n          restaurant.displayDetails = false\n        }\n        return restaurant\n      } else {\n        restaurant.displayDetails = false\n        return restaurant\n      }\n    })\n    setRestaurants(tmpRestaurants)\n    setTmpRestaurants(tmpRestaurants)\n\n    fetch(`https://maps.googleapis.com/maps/api/place/details/json?place_id=${id}&fields=name,rating,reviews,geometry,formatted_address,photos,place_id&key=AIzaSyA1j6BRMbbmh3M1qFh9jGzbFAa5NxGVbHI`)\n      .then((res) => res.json())\n      .then(data => transformAvis(data, selectedRestaurant))\n      .then(data => {\n        setTmpRestaurants([...tmpRestaurants])\n      })\n      .catch((err) => console.log(err))\n  }\n\n  const transformAvis = (data, selectedRestaurant) => { \n    if (data.result.reviews) {\n        let restaurantTransform = []\n        let dataReviews = data.result.reviews\n        let tmp = selectedRestaurant\n\n        dataReviews.map(review => {\n            let tmpReview = {}\n            tmpReview.stars = review.rating\n            tmpReview.comment = review.text\n            tmp.ratings.push(tmpReview)\n        })\n        \n        restaurantTransform.push(tmp)\n        return tmp\n    } else {\n        return null\n    }\n}\n\n  // tmpRestaurants dans Restaurants\n  const transformTmpToRestaurants = (tmp) => {\n\n    setTmpRestaurants(tmp)\n    let array = restaurants\n\n    console.log(tmp)\n    for (let j = 0; j < restaurants.length; j++) {\n      for (let i = 0; i < tmpRestaurants.length; i++) {\n        let elementTmp = tmpRestaurants[i]\n        let elementRestaurant = restaurants[j]\n        if (elementTmp.restaurantID === elementRestaurant.restaurantID) {\n          array[j] = elementTmp\n        }\n      }\n    }\n\n    console.log(array)\n    setRestaurants(array)\n  }\n\n  const contextValue = {\n    restaurants: restaurants,\n    updateRestaurants: setRestaurants,\n    handleMarkerClick: handleMarkerClick,\n    tmpRestaurants: tmpRestaurants,\n    updateTmpRestaurants: transformTmpToRestaurants,\n    setUpdateTmpRestaurants: setTmpRestaurants\n  }\n\n  useEffect(() => {\n    \n    navigator.geolocation.getCurrentPosition(function(position) {\n      let tmpLocation = {}\n      tmpLocation.lat = position.coords.latitude\n      tmpLocation.lng = position.coords.longitude\n\n      setLocation(tmpLocation)\n\n      fetchRestaurants(position.coords.latitude, position.coords.longitude)\n      // fetch(`https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${position.coords.latitude},${position.coords.longitude}&radius=1000&type=restaurant&key=AIzaSyA1j6BRMbbmh3M1qFh9jGzbFAa5NxGVbHI`)\n      // .then((res) => res.json())\n      // .then(data => transformDatas(data))\n      // .then(data => {\n      //   setRestaurants(data)\n      //   setTmpRestaurants(data)\n      // })\n      // .catch((err) => console.log(err))\n    }, errorPosition)\n\n  }, [])\n\n  const fetchRestaurants = (lat, lng) => {\n    fetch(`https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${lat},${lng}&radius=1000&type=restaurant&key=AIzaSyA1j6BRMbbmh3M1qFh9jGzbFAa5NxGVbHI`)\n      .then((res) => res.json())\n      .then(data => transformDatas(data))\n      .then(data => {\n        setRestaurants(data)\n        setTmpRestaurants(data)\n      })\n      .catch((err) => console.log(err))\n  }\n\n  const errorPosition = (error) => {\n    if (error) setErrorGeolocation(true)\n  }\n\n  const transformDatas = (datas) => {    \n    let allRestaurantTransform = []    \n    \n    datas.results.map(data => {\n      let tmpRestaurant = {}\n      tmpRestaurant.restaurantID = data.place_id\n      tmpRestaurant.restaurantName = data.name\n      tmpRestaurant.address = data.vicinity\n      tmpRestaurant.lat = data.geometry.location.lat\n      tmpRestaurant.lng = data.geometry.location.lng\n\n      tmpRestaurant.ratings = []\n      \n      if (data.rating) {\n        tmpRestaurant.average = data.rating\n      } else {\n        tmpRestaurant.average = null\n      }\n        \n      \n      if (!data.user_ratings_total) {\n        tmpRestaurant.ratingsTotal = 0\n      } else {\n        tmpRestaurant.ratingsTotal = data.user_ratings_total\n      }\n      \n      if (data.photos) {\n        if (data.photos.length > 0) {\n          tmpRestaurant.img = `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${data.photos[0].photo_reference}&key=AIzaSyA1j6BRMbbmh3M1qFh9jGzbFAa5NxGVbHI`\n        } else {\n          tmpRestaurant.img = '/logo_resto.png'\n        }\n      }\n      else {\n        tmpRestaurant.img = '/logo_resto.png'\n      }\n      \n      allRestaurantTransform.push(tmpRestaurant)\n    })\n\n    return allRestaurantTransform\n  }\n\n  const moyenneAvis = (restaurant) => {\n    var restaurantSelect = restaurants.filter(feature => feature.restaurantID === restaurant.restaurantID);\n    const totalStars = restaurant.ratings.map(rating => rating.stars).reduce((previousValue, currentValue, index, array) => {\n      var value = index + 1 === array.length ? (previousValue + currentValue) / array.length : previousValue + currentValue;\n      restaurantSelect[0].average = parseFloat(value.toFixed(1));\n      return value;\n    });\n    restaurantSelect[0].average = parseFloat(totalStars.toFixed(1));\n  }\n\n  return (\n    <RestaurantsContext.Provider value={contextValue}>\n      <div className=\"appCSS\">\n        <div className=\"map\" style={{ width: '65vw', height: '100vh' }}>\n          <WrappedMap googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyBbXlKpycaKnkWqib5h17gluphKw_nLENs`}\n            loadingElement={<div style={{ height: \"100%\" }} />}\n            containerElement={<div style={{ height: \"100%\" }} />}\n            mapElement={<div style={{ height: \"100%\" }} />}\n            handleMarkerClick={handleMarkerClick}\n            location={location}\n            transformDatas={transformDatas}\n            fetchRestaurants={fetchRestaurants}\n          />\n        </div>\n        <div style={{ width: '35vw', height: '100vh' }}>\n          {errorGeolocation ? \n            <div>\n              <img src='/localisation.jpg' style={{height: '200px', marginTop: '55%', marginLeft: '28%', marginRight: '20%'}}></img>\n              <div style={{color: '#f5f8b3', textAlign: 'center', width: '265px', marginLeft: '25%', marginTop: '30px'}}>Veuillez activer la géolocalisation pour continuer d'utiliser l'application</div>\n            </div> \n            : <div className=\"general\">\n              <PanelRight tmpRestaurants={restaurants}/>\n            </div>}\n        </div>\n      </div>\n    </RestaurantsContext.Provider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './style/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}